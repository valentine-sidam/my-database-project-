// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡∏à‡∏≤‡∏Å‡∏ù‡∏±‡πà‡∏á Client-side
// ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡πÉ‡∏ô Firebase ‡∏à‡∏£‡∏¥‡∏á

// Import Firebase ‡πÅ‡∏ö‡∏ö ES6 modules
import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js';
import { 
    getFirestore, 
    collection, 
    getDocs, 
    addDoc,
    query,
    where,
    orderBy,
    limit
} from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore.js';

// Firebase Config ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
const firebaseConfig = {
    apiKey: "AIzaSyDxvNhL4N8mF9YrKfXvZ5LxGYK-5qE8cVQ",
    authDomain: "my-database-project-343ae.firebaseapp.com", 
    projectId: "my-database-project-343ae",
    storageBucket: "my-database-project-343ae.appspot.com",
    messagingSenderId: "111449885278684667388",
    appId: "1:111449885278684667388:web:toolbase2024app"
};

console.log('üî• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö Firebase Connection...');

let app, db;

try {
    // Initialize Firebase
    app = initializeApp(firebaseConfig);
    db = getFirestore(app);
    console.log('‚úÖ Firebase App initialized successfully');
    console.log('üìä Project ID:', firebaseConfig.projectId);
} catch (error) {
    console.error('‚ùå Firebase initialization failed:', error);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function testFirebaseConnection() {
    console.log('\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Firestore...');
    
    try {
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
        console.log('üë• ‡∏ó‡∏î‡∏™‡∏≠‡∏ö employees collection...');
        const employeesRef = collection(db, 'employees');
        const employeesSnapshot = await getDocs(employeesRef);
        console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${employeesSnapshot.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        employeesSnapshot.docs.slice(0, 3).forEach((doc, index) => {
            const data = doc.data();
            console.log(`  ${index + 1}. ${data.employee_id} - ${data.full_name}`);
        });
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠
        console.log('\nüîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö tools collection...');
        const toolsRef = collection(db, 'tools');
        const toolsSnapshot = await getDocs(toolsRef);
        console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ ${toolsSnapshot.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        toolsSnapshot.docs.slice(0, 3).forEach((doc, index) => {
            const data = doc.data();
            console.log(`  ${index + 1}. ${data.tool_name || data.Tools} (${data.old_code || data['Old Code'] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™'})`);
        });
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏Ç‡∏≠
        console.log('\nüìã ‡∏ó‡∏î‡∏™‡∏≠‡∏ö tool_requests collection...');
        const requestsRef = collection(db, 'tool_requests');
        const requestsSnapshot = await getDocs(requestsRef);
        console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏Ç‡∏≠ ${requestsSnapshot.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        
        if (requestsSnapshot.size > 0) {
            requestsSnapshot.docs.forEach((doc, index) => {
                const data = doc.data();
                console.log(`  ${index + 1}. ${doc.id} - ‡∏ú‡∏π‡πâ‡∏Ç‡∏≠: ${data.employee_name} (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${data.status})`);
            });
        }
        
        return true;
        
    } catch (error) {
        console.error('‚ùå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
        
        // ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå error
        if (error.code === 'permission-denied') {
            console.error('üîí Permission Denied: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firestore Rules');
        } else if (error.code === 'unavailable') {
            console.error('üåê Network Error: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ internet');
        } else if (error.code === 'invalid-argument') {
            console.error('‚öôÔ∏è Config Error: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Config');
        }
        
        return false;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function testWriteData() {
    console.log('\n‚úèÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
    
    try {
        const testRequest = {
            employee_id: '100013',
            employee_name: '‡∏≠‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏• ‡∏Ñ‡∏≥‡∏ú‡∏á‡πÅ‡∏î‡∏á', 
            department: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£',
            section: 'Sukhumvit 29 Hotel (HT-SKV29)',
            project: 'Sukhumvit 29 Hotel (HT-SKV29)',
            requested_tools: [
                {
                    tool_id: 'E.MJ.CON.010.031.011.0005',
                    tool_name: '‡∏£‡∏≠‡∏Å‡∏™‡∏•‡∏¥‡∏á‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ ‡∏Ç‡∏ô‡∏≤‡∏î 1',
                    tool_code: 'E.MJ.CON.010.031.011.0005',
                    quantity: 1,
                    note: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö'
                }
            ],
            status: 'pending',
            created_at: new Date(),
            test: true // flag ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô test data
        };
        
        const docRef = await addDoc(collection(db, 'tool_requests'), testRequest);
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á test request ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Document ID:', docRef.id);
        
        return docRef.id;
        
    } catch (error) {
        console.error('‚ùå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
        return null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
async function runTests() {
    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Firebase\n');
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const readSuccess = await testFirebaseConnection();
    
    if (readSuccess) {
        console.log('\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        const writeResult = await testWriteData();
        
        if (writeResult) {
            console.log('\nüéâ ‡∏£‡∏∞‡∏ö‡∏ö Firebase ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥!');
            console.log('‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
            console.log('üîó ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á 3 ‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß');
        } else {
            console.log('\n‚ö†Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
            console.log('üí° ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firestore Security Rules');
        }
    } else {
        console.log('\n‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        console.log('üí° ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Config ‡πÅ‡∏•‡∏∞ Network');
    }
}

// Export ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
window.testFirebase = {
    testConnection: testFirebaseConnection,
    testWrite: testWriteData,
    runAll: runTests,
    db: db,
    app: app
};

// ‡∏£‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener('DOMContentLoaded', runTests);