/**
 * uploadAllData.js
 * ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ Firebase:
 * - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏à‡∏≤‡∏Å Google Sheet (6,635 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
 * - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å CSV (206 ‡∏Ñ‡∏ô)
 */

const { fetchToolsFromSheet } = require('./uploadToolsFromSheet');
const { readEmployeesFromCSV } = require('./uploadEmployeesFromCSV');

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå Firebase Admin SDK ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
let admin, db;
try {
  admin = require('firebase-admin');
  const serviceAccount = require('./my-database-project-firebase-adminsdk.json');
  
  if (!admin.apps.length) {
    admin.initializeApp({
      credential: admin.credential.cert(serviceAccount)
    });
  }
  db = admin.firestore();
  console.log("‚úÖ Firebase Admin SDK ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
} catch (error) {
  console.log("‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Firebase Admin SDK key");
  console.log("üìù ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å: Firebase Console > Project Settings > Service Accounts");
  db = null;
}

// üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏ö‡∏ö Batch
async function uploadToolsBatch(tools, batchSize = 500) {
  if (!db) return false;
  
  console.log(`üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ ${tools.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£...`);
  
  let totalSuccess = 0;
  
  for (let i = 0; i < tools.length; i += batchSize) {
    const batch = db.batch();
    const batchTools = tools.slice(i, i + batchSize);
    
    batchTools.forEach(tool => {
      if (tool.serial_no) {
        // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î serial_no ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô document ID
        const cleanSerialNo = tool.serial_no.replace(/[^a-zA-Z0-9\-_.]/g, '_');
        const docRef = db.collection('tools').doc(cleanSerialNo);
        batch.set(docRef, tool, { merge: true });
      }
    });
    
    try {
      await batch.commit();
      totalSuccess += batchTools.length;
      console.log(`‚úÖ Tools Batch ${Math.floor(i/batchSize) + 1}/${Math.ceil(tools.length/batchSize)}: ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ${batchTools.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    } catch (error) {
      console.error(`‚ùå Tools Batch ${Math.floor(i/batchSize) + 1} ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
  }
  
  return totalSuccess;
}

// üë• ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Batch
async function uploadEmployeesBatch(employees, batchSize = 100) {
  if (!db) return false;
  
  console.log(`üë• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${employees.length} ‡∏Ñ‡∏ô...`);
  
  let totalSuccess = 0;
  
  for (let i = 0; i < employees.length; i += batchSize) {
    const batch = db.batch();
    const batchEmployees = employees.slice(i, i + batchSize);
    
    batchEmployees.forEach(employee => {
      if (employee.employee_id) {
        const docRef = db.collection('employees').doc(employee.employee_id);
        batch.set(docRef, employee, { merge: true });
      }
    });
    
    try {
      await batch.commit();
      totalSuccess += batchEmployees.length;
      console.log(`‚úÖ Employees Batch ${Math.floor(i/batchSize) + 1}/${Math.ceil(employees.length/batchSize)}: ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ${batchEmployees.length} ‡∏Ñ‡∏ô`);
    } catch (error) {
      console.error(`‚ùå Employees Batch ${Math.floor(i/batchSize) + 1} ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
  }
  
  return totalSuccess;
}

// üöÄ MAIN
async function main() {
  console.log("üéØ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ Firebase...\n");
  
  let totalSuccess = 0;
  
  try {
    // 1. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏à‡∏≤‡∏Å Google Sheet
    console.log("üîÑ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏à‡∏≤‡∏Å Google Sheet...");
    const tools = await fetchToolsFromSheet();
    
    if (tools.length > 0) {
      console.log(`üì¶ ‡∏û‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ ${tools.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      if (db) {
        const toolsUploaded = await uploadToolsBatch(tools);
        totalSuccess += toolsUploaded;
        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${toolsUploaded} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);
      }
    } else {
      console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠\n");
    }
    
    // 2. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å CSV
    console.log("üîÑ ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV...");
    const employees = await readEmployeesFromCSV('ToolBase System - Employees.csv');
    
    if (employees.length > 0) {
      console.log(`üë• ‡∏û‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${employees.length} ‡∏Ñ‡∏ô`);
      if (db) {
        const employeesUploaded = await uploadEmployeesBatch(employees);
        totalSuccess += employeesUploaded;
        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${employeesUploaded} ‡∏Ñ‡∏ô\n`);
      }
    } else {
      console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô\n");
    }
    
    // 3. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
    if (db) {
      console.log("üéâ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î:");
      console.log(`‚úÖ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalSuccess} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      console.log(`üîß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠: ${tools.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      console.log(`üë• ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô: ${employees.length} ‡∏Ñ‡∏ô`);
      console.log("\nüîó ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà:");
      console.log("   - Firebase Console > Firestore Database");
      console.log("   - Collection: 'tools' ‡πÅ‡∏•‡∏∞ 'employees'");
    } else {
      console.log("üí° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á:");
      console.log("   1. ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î Firebase Admin SDK key");
      console.log("   2. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô 'my-database-project-firebase-adminsdk.json'");
      console.log("   3. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
    }
    
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error.message);
  }
}

// ‡∏£‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
  main().catch(console.error);
}