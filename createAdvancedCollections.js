const admin = require('firebase-admin');
const serviceAccount = require('./my-database-project-firebase-adminsdk.json');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function createCollections() {
    try {
        console.log('üèóÔ∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á Collections ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô Firebase...\n');

        // 1. Tool Requests Collection
        console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á collection: tool_requests');
        await db.collection('tool_requests').doc('sample').set({
            request_id: 'REQ_20241008_001',
            employee_id: '100007',
            employee_name: '‡∏Å‡∏°‡∏•‡∏•‡∏≤‡∏® ‡∏ß‡∏¥‡∏ä‡∏±‡∏¢‡πÇ‡∏¢',
            department: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£',
            project_name: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
            tools: [
                {
                    tool_id: 'E.MJ.CON.010.031.011.0005',
                    tool_name: '‡∏£‡∏≠‡∏Å‡∏™‡∏•‡∏¥‡∏á‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ ‡∏Ç‡∏ô‡∏≤‡∏î 1',
                    quantity: 1,
                    note: '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£'
                }
            ],
            status: 'pending', // pending, approved, rejected, returned
            request_date: new Date(),
            approved_by: null,
            approved_date: null,
            return_date: null,
            remarks: ''
        });

        // 2. Tool Status Collection  
        console.log('üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á collection: tool_status');
        await db.collection('tool_status').doc('sample').set({
            tool_id: 'E.MJ.CON.010.031.011.0005',
            tool_name: '‡∏£‡∏≠‡∏Å‡∏™‡∏•‡∏¥‡∏á‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ ‡∏Ç‡∏ô‡∏≤‡∏î 1',
            status: 'available', // available, borrowed, maintenance, damaged
            location: '‡∏Ñ‡∏•‡∏±‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏Å',
            last_updated: new Date(),
            borrowed_by: null,
            borrowed_date: null,
            expected_return: null
        });

        // 3. Approval History Collection
        console.log('üìã ‡∏™‡∏£‡πâ‡∏≤‡∏á collection: approval_history');
        await db.collection('approval_history').doc('sample').set({
            request_id: 'REQ_20241008_001',
            action: 'approved', // approved, rejected
            approved_by: 'ADMIN001',
            approver_name: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏±‡∏á',
            action_date: new Date(),
            remarks: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£'
        });

        // 4. Borrow History Collection
        console.log('üìö ‡∏™‡∏£‡πâ‡∏≤‡∏á collection: borrow_history');
        await db.collection('borrow_history').doc('sample').set({
            history_id: 'HIST_20241008_001',
            request_id: 'REQ_20241008_001',
            employee_id: '100007',
            employee_name: '‡∏Å‡∏°‡∏•‡∏•‡∏≤‡∏® ‡∏ß‡∏¥‡∏ä‡∏±‡∏¢‡πÇ‡∏¢',
            tool_id: 'E.MJ.CON.010.031.011.0005',
            tool_name: '‡∏£‡∏≠‡∏Å‡∏™‡∏•‡∏¥‡∏á‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ ‡∏Ç‡∏ô‡∏≤‡∏î 1',
            quantity: 1,
            borrow_date: new Date(),
            expected_return: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 days
            actual_return: null,
            status: 'borrowed', // borrowed, returned, overdue
            condition_out: '‡∏î‡∏µ',
            condition_in: null,
            remarks: '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£'
        });

        // 5. Settings Collection
        console.log('‚öôÔ∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á collection: settings');
        await db.collection('settings').doc('system').set({
            max_borrow_days: 30,
            approval_required: true,
            notification_before_due: 3, // days
            admin_emails: ['admin@company.com'],
            system_name: 'Tools Track System',
            version: '1.0.0'
        });

        console.log('\n‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Collections ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
        console.log('\nüìä Collections ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:');
        console.log('   ‚Ä¢ tool_requests - ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏¢‡∏∑‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠');
        console.log('   ‚Ä¢ tool_status - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠');
        console.log('   ‚Ä¢ approval_history - ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥');
        console.log('   ‚Ä¢ borrow_history - ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°-‡∏Ñ‡∏∑‡∏ô');
        console.log('   ‚Ä¢ settings - ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö');

    } catch (error) {
        console.error('‚ùå Error creating collections:', error);
    }
    
    process.exit(0);
}

createCollections();